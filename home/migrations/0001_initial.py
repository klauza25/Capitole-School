# Generated by Django 5.2.4 on 2025-08-25 19:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, verbose_name='Nom de la classe')),
                ('effectif_max', models.PositiveIntegerField(blank=True, null=True, verbose_name='Effectif maximum')),
            ],
            options={
                'verbose_name': 'Classe',
                'verbose_name_plural': 'Classes',
                'ordering': ['niveau', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Cycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True, verbose_name='Nom du cycle')),
            ],
            options={
                'verbose_name': 'Cycle',
                'verbose_name_plural': 'Cycles',
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('enseignant', 'Enseignant'), ('eleve', 'Élève'), ('parent', 'Parent'), ('directeur', 'Directeur'), ('secretaire', 'Secrétaire'), ('surveillant', 'Surveillant')], db_index=True, max_length=20, verbose_name='Rôle')),
                ('telephone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='utilisateurs/', verbose_name='Photo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'ordering': ['last_name', 'first_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=20, unique=True, verbose_name='Matricule')),
                ('date_naissance', models.DateField(verbose_name='Date de naissance')),
                ('genre', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin'), ('Autre', 'Autre')], max_length=10, verbose_name='Genre')),
                ('contact_urgence', models.CharField(blank=True, max_length=100, verbose_name="Contact d'urgence")),
                ('infos_medicaux', models.TextField(blank=True, verbose_name='Informations médicales')),
                ('classe_actuelle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eleves', to='home.classe', verbose_name='Classe actuelle')),
                ('utilisateur', models.OneToOneField(limit_choices_to={'role': 'eleve'}, on_delete=django.db.models.deletion.CASCADE, related_name='eleve_profile', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Élève',
                'verbose_name_plural': 'Élèves',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom du document')),
                ('fichier', models.FileField(upload_to='documents/', verbose_name='Fichier')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('type', models.CharField(choices=[('bulletin', 'Bulletin'), ('certificat', 'Certificat'), ('autre', 'Autre')], max_length=50, verbose_name='Type')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.eleve', verbose_name='Élève')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
            },
        ),
        migrations.CreateModel(
            name='Niveau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, verbose_name='Nom du niveau')),
                ('cycle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='niveaux', to='home.cycle', verbose_name='Cycle')),
            ],
            options={
                'verbose_name': 'Niveau',
                'verbose_name_plural': 'Niveaux',
                'ordering': ['cycle', 'nom'],
                'unique_together': {('cycle', 'nom')},
            },
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de la matière')),
                ('coefficient', models.FloatField(default=1.0, verbose_name='Coefficient')),
                ('niveau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matieres', to='home.niveau', verbose_name='Niveau')),
            ],
            options={
                'verbose_name': 'Matière',
                'verbose_name_plural': 'Matières',
                'unique_together': {('nom', 'niveau')},
            },
        ),
        migrations.CreateModel(
            name='Frais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom des frais')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant')),
                ('date_limite', models.DateField(verbose_name='Date limite')),
                ('niveau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.niveau', verbose_name='Niveau concerné')),
            ],
            options={
                'verbose_name': 'Frais scolaires',
                'verbose_name_plural': 'Frais scolaires',
            },
        ),
        migrations.AddField(
            model_name='classe',
            name='niveau',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='home.niveau', verbose_name='Niveau'),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trimestre', models.CharField(choices=[('T1', 'Trimestre 1'), ('T2', 'Trimestre 2'), ('T3', 'Trimestre 3')], max_length=2)),
                ('type_evaluation', models.CharField(choices=[('DS1', 'Devoir 1'), ('DS2', 'Devoir 2'), ('DS3', 'Devoir 3'), ('COMP', 'Composition Trimestrielle'), ('DEP', 'Devoir Départemental')], max_length=4)),
                ('valeur', models.DecimalField(decimal_places=2, max_digits=4)),
                ('date_evaluation', models.DateField(auto_now_add=True)),
                ('coefficient', models.FloatField(default=1.0)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='home.eleve')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enfants', models.ManyToManyField(blank=True, related_name='parents', to='home.eleve', verbose_name='Enfants')),
                ('utilisateur', models.OneToOneField(limit_choices_to={'role': 'parent'}, on_delete=django.db.models.deletion.CASCADE, related_name='parent_profile', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Parent',
                'verbose_name_plural': 'Parents',
            },
        ),
        migrations.CreateModel(
            name='Enseignement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enseignant', models.ForeignKey(limit_choices_to={'role': 'enseignant'}, on_delete=django.db.models.deletion.CASCADE, related_name='enseignements', to=settings.AUTH_USER_MODEL, verbose_name='Enseignant')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.matiere', verbose_name='Matière')),
            ],
            options={
                'verbose_name': 'Enseignement',
                'verbose_name_plural': 'Enseignements',
                'unique_together': {('matiere', 'enseignant')},
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objet', models.CharField(max_length=100, verbose_name='Objet')),
                ('contenu', models.TextField(verbose_name='Contenu')),
                ('date_envoi', models.DateTimeField(auto_now_add=True, verbose_name="Date d'envoi")),
                ('lu', models.BooleanField(default=False, verbose_name='Lu')),
                ('destinataire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_recus', to=settings.AUTH_USER_MODEL, verbose_name='Destinataire')),
                ('expediteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_envoyes', to=settings.AUTH_USER_MODEL, verbose_name='Expéditeur')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['-date_envoi'],
                'indexes': [models.Index(fields=['expediteur', 'date_envoi'], name='home_messag_expedit_bb9134_idx'), models.Index(fields=['destinataire', 'date_envoi'], name='home_messag_destina_79a42e_idx')],
            },
        ),
        migrations.AlterUniqueTogether(
            name='classe',
            unique_together={('niveau', 'nom')},
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date de paiement')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant payé')),
                ('moyen', models.CharField(choices=[('especes', 'Espèces'), ('mobile_money', 'Mobile Money'), ('cheque', 'Chèque'), ('virement', 'Virement bancaire')], max_length=50, verbose_name='Mode de paiement')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.eleve', verbose_name='Élève')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'indexes': [models.Index(fields=['eleve', 'date'], name='home_paieme_eleve_i_4bb23a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Presence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, verbose_name='Date')),
                ('present', models.BooleanField(verbose_name='Présent')),
                ('justification', models.TextField(blank=True, verbose_name='Justification')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.eleve', verbose_name='Élève')),
            ],
            options={
                'verbose_name': 'Présence',
                'verbose_name_plural': 'Présences',
                'ordering': ['-date'],
                'unique_together': {('eleve', 'date')},
            },
        ),
    ]
